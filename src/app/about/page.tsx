// app/about/page.tsx

"use client"; // <-- –í–ê–ñ–ù–û: –î–æ–±–∞–≤–ª—è–µ–º, —Ç.–∫. –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫–∏ (useInView)

import type { SVGProps, ReactNode } from "react";
import Link from "next/link";
import { useInView } from "react-intersection-observer"; // <-- –î–û–ë–ê–í–õ–ï–ù–û

// --- –ö–û–ú–ü–û–ù–ï–ù–¢–´, –°–ö–û–ü–ò–†–û–í–ê–ù–ù–´–ï –î–õ–Ø –ï–î–ò–ù–û–û–ë–†–ê–ó–ò–Ø ---
// –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∏—Ö –ª—É—á—à–µ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ–±—â–∏–µ —Ñ–∞–π–ª—ã (e.g., /components/Header.tsx, /components/Icons.tsx)

function StarIcon(props: SVGProps<SVGSVGElement>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" {...props} >
      <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2" />
    </svg>
  );
}


function Header() {
  return (
    <header className="sticky top-0 z-50 w-full border-b border-neutral-200/80 bg-white/80 backdrop-blur-lg dark:border-neutral-800/80 dark:bg-black/80">
      <div className="container mx-auto flex h-16 max-w-5xl items-center justify-between px-4">
        <nav className="flex items-center gap-6">
          <Link href="/" className="flex items-center gap-2">
            <StarIcon className="h-6 w-6 text-blue-500" />
            <span className="text-lg font-bold text-neutral-900 dark:text-neutral-100">
              –ó–≤—ë–∑–¥—ã Telegram
            </span>
          </Link>
          <Link href="/about" className="text-sm font-medium text-blue-600 underline decoration-blue-600/50 underline-offset-4 dark:text-blue-400 dark:decoration-blue-400/50">
            –û –ó–≤—ë–∑–¥–∞—Ö
          </Link>
        </nav>
        <div className="flex items-center gap-3">
          <a
            href="https://t.me/ruinstar"
            target="_blank"
            rel="noopener noreferrer"
            className="inline-flex items-center gap-2 px-3 py-2 rounded-lg bg-blue-500/20 text-blue-600 dark:text-blue-400 hover:bg-blue-500/30 backdrop-blur-sm transition-all duration-200 text-sm font-medium glow-effect-sm"
          >
            üì¢ –ö–∞–Ω–∞–ª
          </a>
          <a
            href="https://t.me/ruin_support"
            target="_blank"
            rel="noopener noreferrer"
            className="inline-flex items-center gap-2 px-3 py-2 rounded-lg bg-green-500/20 text-green-600 dark:text-green-400 hover:bg-green-500/30 backdrop-blur-sm transition-all duration-200 text-sm font-medium glow-effect-sm"
          >
            üõ†Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞
          </a>
          <Link
            href="/#pricing"
            className="inline-flex h-9 items-center justify-center rounded-md bg-gradient-to-r from-blue-600/80 to-purple-600/80 backdrop-blur-sm px-4 py-2 text-sm font-medium text-white shadow transition-all duration-200 hover:from-blue-500 hover:to-purple-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-black glow-effect"
          >
            –ö—É–ø–∏—Ç—å
          </Link>
        </div>
      </div>
    </header>
  );
}


const AnimateOnScroll = ({ children, delay = 0, className = "", as: Component = 'div' }: { children: ReactNode, delay?: number, className?: string, as?: React.ElementType }) => {
  const { ref, inView } = useInView({
    triggerOnce: true,
    threshold: 0.1,
  });

  return (
    <Component
      ref={ref}
      className={`transition-all duration-700 ease-out ${className} ${
        inView ? "opacity-100 translate-y-0" : "opacity-0 translate-y-8"
      }`}
      style={{ transitionDelay: `${delay}ms` }}
    >
      {children}
    </Component>
  );
};



// --- –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û –ó–≤—ë–∑–¥–∞—Ö" ---
export default function AboutPage() {
  const faqItems = [
    {
      q: "–ö–∞–∫ –±—ã—Å—Ç—Ä–æ —è –ø–æ–ª—É—á—É –ó–≤—ë–∑–¥—ã?",
      a: "–û–±—ã—á–Ω–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 10-15 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–∏–º–µ—Ç –≤–∞—à –∑–∞–∫–∞–∑. –ú—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ.",
    },
    {
      q: "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ —è –≤–≤—ë–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π username?",
      a: "–ù–∞ —ç—Ç–∞–ø–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –≤—ã —É–≤–∏–¥–∏—Ç–µ –∞–≤–∞—Ç–∞—Ä –∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ï—Å–ª–∏ –≤—ã –∑–∞–º–µ—Ç–∏–ª–∏ –æ—à–∏–±–∫—É, –ø—Ä–æ—Å—Ç–æ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ –∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π username. –ï—Å–ª–∏ –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç, –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.",
    },
    {
      q: "–≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ?",
      a: "–ê–±—Å–æ–ª—é—Ç–Ω–æ. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç—ë–∂–Ω—ã–µ —à–ª—é–∑—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ Crypto Bot –∏ LZT Market. –ú—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–∞—à –ø–∞—Ä–æ–ª—å –∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É. –í—Å—ë, —á—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ, ‚Äî —ç—Ç–æ –≤–∞—à –ø—É–±–ª–∏—á–Ω—ã–π username –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –ó–≤—ë–∑–¥.",
    },
  ];

  return (
    <div className="flex min-h-screen w-full flex-col bg-white dark:bg-black">
      <Header />
      {/* –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º main –≤ relative, —á—Ç–æ–±—ã —Ñ–æ–Ω –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–ª—Å—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–≥–æ */}
      <main className="relative flex-1 overflow-hidden">
        {/* –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
        
        <div className="container mx-auto max-w-3xl px-4 py-16 sm:py-24">
          <div className="space-y-12">
            <AnimateOnScroll className="space-y-4">
              <h1 className="text-4xl font-bold tracking-tight text-neutral-900 dark:text-neutral-100 sm:text-5xl">
                –ß—Ç–æ —Ç–∞–∫–æ–µ –ó–≤—ë–∑–¥—ã Telegram?
              </h1>
              <p className="text-xl leading-8 text-neutral-600 dark:text-neutral-400">
                –ó–≤—ë–∑–¥—ã (Telegram Stars) ‚Äî —ç—Ç–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –≤–∞–ª—é—Ç–∞, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –æ–ø–ª–∞—Ç—ã —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã—Ö –±–æ—Ç–∞–º–∏ –∏ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏ –≤ Telegram. –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–æ–≤ –∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏—è–º.
              </p>
            </AnimateOnScroll>
            
            <AnimateOnScroll delay={200} className="space-y-6 pt-8 border-t border-neutral-200/80 dark:border-neutral-800/80">
              <h2 className="text-3xl font-bold tracking-tight text-neutral-900 dark:text-neutral-100">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</h2>
              <p className="text-base leading-7 text-neutral-700 dark:text-neutral-300">–ü—Ä–æ—Ü–µ—Å—Å –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ó–≤—ë–∑–¥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç –∏ –ø—Ä–æ–∑—Ä–∞—á–µ–Ω:</p>
              <ol className="list-decimal list-inside space-y-4 marker:font-semibold marker:text-blue-600 dark:marker:text-blue-400">
                {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º stagger-–∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è —Å–ø–∏—Å–∫–∞ */}
                {[{
                  title: "–ü–æ–∫—É–ø–∫–∞:",
                  text: "–í—ã –≤—ã–±–∏—Ä–∞–µ—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–∞–∫–µ—Ç –ó–≤—ë–∑–¥ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ –∏ —Å–æ–≤–µ—Ä—à–∞–µ—Ç–µ –ø–æ–∫—É–ø–∫—É —á–µ—Ä–µ–∑ —É–¥–æ–±–Ω—ã–π –¥–ª—è –≤–∞—Å –º–µ—Ç–æ–¥."
                }, {
                  title: "–ü–æ–ª—É—á–µ–Ω–∏–µ:",
                  text: "–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã, –º—ã —Å–≤—è–∑—ã–≤–∞–µ–º—Å—è —Å –≤–∞–º–∏ –∏ –Ω–∞—á–∏—Å–ª—è–µ–º –ó–≤—ë–∑–¥—ã –Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤ Telegram. –≠—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ."
                }, {
                  title: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:",
                  text: "–í—ã –º–æ–∂–µ—Ç–µ —Ç—Ä–∞—Ç–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –ó–≤—ë–∑–¥—ã –≤ –ª—é–±–æ–º –±–æ—Ç–µ –∏–ª–∏ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —ç—Ç–æ—Ç —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ–∫—É–ø–∫–∞ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –¥–æ–Ω–∞—Ç –∞–≤—Ç–æ—Ä—É –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ."
                }].map((item, index) => (
                  <AnimateOnScroll as="li" key={index} delay={100 * index} className="text-base leading-7 text-neutral-700 dark:text-neutral-300">
                    <strong className="font-semibold text-neutral-900 dark:text-neutral-100">{item.title}</strong> {item.text}
                  </AnimateOnScroll>
                ))}
              </ol>
            </AnimateOnScroll>

            <AnimateOnScroll delay={200} className="space-y-6 pt-8 border-t border-neutral-200/80 dark:border-neutral-800/80">
                <h2 className="text-3xl font-bold tracking-tight text-neutral-900 dark:text-neutral-100">–î–ª—è —á–µ–≥–æ –Ω—É–∂–Ω—ã –ó–≤—ë–∑–¥—ã?</h2>
                <p className="text-base leading-7 text-neutral-700 dark:text-neutral-300">–ó–≤—ë–∑–¥—ã –æ—Ç–∫—Ä—ã–≤–∞—é—Ç –¥–æ—Å—Ç—É–ø –∫ —Ä–∞—Å—Ç—É—â–µ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –≤–Ω—É—Ç—Ä–∏ Telegram. –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</p>
                <ul className="list-disc list-inside space-y-3 marker:text-blue-600 dark:marker:text-blue-400">
                     {[{
                      title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∞–≤—Ç–æ—Ä–æ–≤:",
                      text: "–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–∞–π—Ç–µ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è—è –∏–º –¥–æ–Ω–∞—Ç—ã –≤ –≤–∏–¥–µ –ó–≤—ë–∑–¥."
                    }, {
                      title: "–û–ø–ª–∞—Ç–∞ –≤ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö:",
                      text: "–ü–æ–∫—É–ø–∞–π—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏ —É—Å–ª—É–≥–∏ –≤ –∏–≥—Ä–∞—Ö, –º–∞–≥–∞–∑–∏–Ω–∞—Ö –∏ —Å–µ—Ä–≤–∏—Å–∞—Ö, —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Telegram Mini Apps."
                    }, {
                      title: "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:",
                      text: "–ü—Ä–∏–æ–±—Ä–µ—Ç–∞–π—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã, —Ç–µ–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è, –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç—ã–º –∫–∞–Ω–∞–ª–∞–º –∏ –¥—Ä—É–≥–∏–µ —Ü–∏—Ñ—Ä–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã."
                    }].map((item, index) => (
                      <AnimateOnScroll as="li" key={index} delay={100 * index} className="text-base leading-7 text-neutral-700 dark:text-neutral-300">
                        <strong className="font-semibold text-neutral-900 dark:text-neutral-100">{item.title}</strong> {item.text}
                      </AnimateOnScroll>
                    ))}
                </ul>
            </AnimateOnScroll>
            
            <AnimateOnScroll delay={200} className="space-y-8 pt-8 border-t border-neutral-200/80 dark:border-neutral-800/80">
                <h2 className="text-3xl font-bold tracking-tight text-neutral-900 dark:text-neutral-100">–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã (FAQ)</h2>
                <div className="space-y-6">
                    {faqItems.map((item, index) => (
                        <AnimateOnScroll key={index} delay={100 * index}>
                            <h3 className="text-lg font-semibold text-neutral-900 dark:text-neutral-100">{item.q}</h3>
                            <p className="mt-1 text-base leading-7 text-neutral-700 dark:text-neutral-300">{item.a}</p>
                        </AnimateOnScroll>
                    ))}
                </div>
            </AnimateOnScroll>

            <AnimateOnScroll delay={200} className="flex justify-center pt-8 border-t border-neutral-200/80 dark:border-neutral-800/80">
              <Link 
                href="/#pricing" 
                className="rounded-md bg-blue-600 px-5 py-3 text-base font-semibold text-white shadow-sm transition-all hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600 glow-effect"
              >
                –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∫—É–ø–∫–µ
              </Link>
            </AnimateOnScroll>
          </div>
        </div>
      </main>
    </div>
  );
}

// --- –ù–µ–º–Ω–æ–≥–æ –∏–∑–º–µ–Ω–∏–º AnimateOnScroll, —á—Ç–æ–±—ã –æ–Ω –º–æ–≥ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –¥—Ä—É–≥–æ–π —Ç–µ–≥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, li) ---

