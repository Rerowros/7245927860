// lib/telegram.ts
import type { Order } from "@prisma/client";

const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const CHAT_ID = process.env.TELEGRAM_CHAT_ID;
const API_URL = `https://api.telegram.org/bot${BOT_TOKEN}`;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å —Å MarkdownV2
// –í —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Å–∏–º–≤–æ–ª—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—Ç —Ä—É–≥–∞—Ç—å—Å—è Telegram.
function escapeMarkdownV2(text: string): string {
  const charsToEscape = "_*[]()~`>#+-=|{}.!";
  return text.split("").map(char => charsToEscape.includes(char) ? `\\${char}` : char).join("");
}

export async function sendMessageToAdmin(order: Order, paymentMethod: string) {
  if (!BOT_TOKEN || !CHAT_ID) {
    console.error("Telegram Bot Token or Chat ID is not configured.");
    return;
  }

  // --- –ò–°–ü–†–ê–í–õ–ï–ù–û ---
  // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Å—Ç—Ä–æ–∫–∏, —ç–∫—Ä–∞–Ω–∏—Ä—É—è –∏—Ö
  const userName = escapeMarkdownV2(order.telegramName);
  const userUsername = order.telegramUsername; // –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º, —Ç.–∫. –æ–Ω–æ –≤ URL –∏ –≤ `code`
  const starsCount = order.stars;
  const orderPrice = escapeMarkdownV2(String(order.price)); // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Ü–µ–Ω—É
  const payMethod = escapeMarkdownV2(paymentMethod); // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
  const orderId = order.id; // ID –≤ `code`, —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
  const orderDate = escapeMarkdownV2(new Date(order.createdAt).toLocaleString("ru-RU")); // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –¥–∞—Ç—É

  const text = `
*–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ \\!* üõí

*–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* [${userName}](https://t.me/${userUsername}) \\(\`@${userUsername}\`\\)
*–ó–∞–∫–∞–∑:* *${starsCount}* ‚≠êÔ∏è –∑–∞ *${orderPrice}* ‚ÇΩ
*–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:* ${payMethod}
*ID –∑–∞–∫–∞–∑–∞:* \`${orderId}\`
*–í—Ä–µ–º—è:* ${orderDate}
  `;
  // --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô ---

  const inline_keyboard = [
    [{ text: "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ", callback_data: `complete_order_${order.id}` }],
  ];

  try {
    const response = await fetch(`${API_URL}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        chat_id: CHAT_ID,
        text: text,
        parse_mode: "MarkdownV2",
        reply_markup: { inline_keyboard },
      }),
    });
    const result = await response.json();
    if (!result.ok) {
      console.error("Failed to send Telegram message:", result);
    } else {
      console.log("Successfully sent notification to admin.");
    }
  } catch (error) {
    console.error("Error sending Telegram message:", error);
  }
}